<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.wang.productcenter.dao.ProductDao">

    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.wang.productcenter.entity.PO.ProductPO" id="productMap">
        <result property="id" column="id"/>
        <result property="typeId" column="type_id"/>
        <result property="productName" column="product_name"/>
        <result property="productPrice" column="product_price"/>
        <result property="productImagePath" column="product_image_path"/>
        <result property="sales" column="sales"/>
        <result property="isSales" column="is_sales"/>
        <result property="describe" column="content"/>
        <result property="valid" column="valid"/>
        <result property="crateTime" column="crate_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <sql id="SelectTo">
        id,
        type_id,
        product_name,
        product_price,
        product_image_path,
        sales,
        content,
        is_sales
    </sql>

    <sql id="SelectByParam">
        valid = 1
        <if test="product.id != null">
            and id = #{product.id}
        </if>
        <if test="product.typeId != null">
            and type_id = #{product.typeId}
        </if>
        <if test="product.productName != null">
            and product_name = #{product.productName}
        </if>
        <if test="product.productPrice != null">
            and product_price = #{product.productPrice}
        </if>
        <if test="product.productImagePath != null">
            and product_image_path = #{product.productImagePath}
        </if>
        <if test="product.sales != null">
            and sales = #{product.sales}
        </if>
        <if test="product.describe != null">
            and content = #{product.describe}
        </if>
    </sql>

    <sql id="updateParam">
        <trim prefix="set" suffixOverrides=",">
            <if test="product.productName != null">
                product_name = #{product.productName},
            </if>
            <if test="product.productPrice != null">
                product_price = #{product.productPrice},
            </if>
            <if test="product.productImagePath != null">
                product_image_path = #{product.productImagePath},
            </if>
            <if test="product.sales != null">
                sales = #{product.sales},
            </if>
            <if test="product.isSales != null">
                is_sales = #{product.isSales},
            </if>
            <if test="product.content != null">
                content = #{product.content}
            </if>
        </trim>
    </sql>

    <insert id="insert">
        insert into product
            (
             type_id,
             product_name,
             product_price,
             product_image_path,
             content,
             sales,
             is_sales,
             valid
             )
            VALUES
            (
             #{product.type_id},
             #{product.product_name},
             #{product.product_price},
             #{product.product_image_path},
             #{product.content},
             0,
             1,
             1
             )
    </insert>

    <update id="remove">
        update product
        set valid = 0
        where id = #{product.id}
    </update>

    <update id="update">
        update product
        <include refid="updateParam"/>
        where id = #{product.id} and valid = 1
    </update>

    <select id="getAll" resultMap="productMap">
        select
        <include refid="SelectTo"/>
        from product where valid = 1
    </select>

    <select id="getById" resultMap="productMap">
        select
        <include refid="SelectTo"/>
        from product
        <where>
            <include refid="SelectByParam"/>
        </where>
    </select>

    <select id="getByName" resultMap="productMap">
        select
        <include refid="SelectTo"/>
        from product
        <where>
            <include refid="SelectByParam"/>
        </where>
    </select>
    <select id="likeByName" resultMap="productMap">
        select
        <include refid="SelectTo"/>
        from product
        where product.product_name like CONCAT('%',#{product.productName},'%')
    </select>

    <select id="getProductIdByName" resultType="java.lang.Integer">
        select id
        from product where product_name = #{productName};
    </select>


</mapper>