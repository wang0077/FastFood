<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.wang.productcenter.dao.ProductTypeDao">

    <resultMap type="com.wang.productcenter.entity.PO.ProductTypePO" id="productTypeMap">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="valid" column="valid"/>
        <result property="crateTime" column="crate_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <sql id="SelectTO">
        product_type.id, product_type.name
    </sql>

    <sql id="SelectByParam">
        valid = 1
        <if test="productType.id != null">
            and id = #{productType.id}
        </if>
        <if test="productType.name != null">
            and name = #{productType.name}
        </if>
    </sql>
    <insert id="insert">
        insert into product_type (name, valid)
        VALUES (#{productType.name}, 1)
    </insert>

    <update id="remove">
        update product_type
        set product_type.valid = 0
        where id = #{productType.id}
    </update>

    <update id="update">
        update product_type set
        <if test="productType.name != null">
            name = #{productType.name}
        </if>
        <where>
            <if test="productType.id != null">
                id = #{productType.id}
            </if>
        </where>
    </update>

    <select id="getAll" resultMap="productTypeMap">
        select
        <include refid="SelectTO"/>
        from product_type where valid = 1
    </select>

    <select id="getById" resultMap="productTypeMap">
        select
        <include refid="SelectTO"/>
        from product_type
        <where>
            <include refid="SelectByParam"/>
        </where>
    </select>

    <select id="getLikeName" resultMap="productTypeMap">
        select
        <include refid="SelectTO"/>
        from product_type
        where name like concat('%',#{productType.name},'%')
    </select>

    <select id="getByName" resultMap="productTypeMap">
        select
        <include refid="SelectTO"/>
        from product_type
        <where>
            <include refid="SelectByParam"/>
        </where>
    </select>
    <select id="groupById" resultMap="productTypeMap">
        select
        <include refid="SelectTO"/>
        from product_type
        where id
        in
        <foreach collection="list" separator="," item="id" index="index" open="(" close=")">
            #{id}
        </foreach>
    </select>



</mapper>