<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.wang.productcenter.dao.DetailTypeDao">

    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.wang.productcenter.entity.PO.DetailTypePO" id="detailTypeMap">
        <result property="id" column="id"/>
        <result property="detailTypeName" column="Detail_type_name"/>
        <result property="productDetailId" column="product_detail_id"/>
        <result property="price" column="price"/>
        <result property="valid" column="valid"/>
        <result property="crateTime" column="crate_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <resultMap type="com.wang.productcenter.entity.PO.Product_DetailType_Middle" id="middle">
        <result property="productId" column="product_id"/>
        <result property="detailTypeId" column="detail_type_id"/>
    </resultMap>

    <sql id="SelectTo">
        detail_type.id,detail_type.price, detail_type.Detail_type_name, detail_type.product_detail_id
    </sql>

    <sql id="SelectByParam">
        valid = 1
        <if test="detail_type.id != null">
            and id = #{detail_type.id}
        </if>
        <if test="detail_type.detailTypeName != null">
            and Detail_type_name = #{detail_type.detailTypeName}
        </if>
    </sql>

    <insert id="insert">
        insert into detail_type (Detail_type_name, product_detail_id, price, valid)
        VALUES (#{detail_type.detailTypeName}, #{detail_type.productDetailId}, #{detail_type.price}, 1);
    </insert>

    <insert id="productAssociationDetailType">
        insert into product__detail_type
            (product_id, detail_type_id, valid)
        VALUES (#{productId}, #{detailTypeId}, 1)
    </insert>


    <update id="remove">
        update detail_type
        set valid = 0
        where id = #{detail_type.id}
    </update>

    <update id="update">
        update detail_type
        <trim prefix="set" suffixOverrides=",">
            <if test="detail_type.detailTypeName != null">
                Detail_type_name = #{detail_type.detailTypeName},
            </if>
            <if test="detail_type.price != null">
                price = #{detail_type.price},
            </if>
        </trim>
        where id = #{detail_type.id}
    </update>

    <update id="productDisconnectDetailType">
        update product__detail_type
        set valid = 0
        where
        detail_type_id = #{detailTypeId} and product_id = #{productId}
    </update>

    <select id="getAll" resultMap="detailTypeMap">
        select
        <include refid="SelectTo"/>
        from detail_type where valid = 1
    </select>

    <select id="getById" resultMap="detailTypeMap">
        select
        <include refid="SelectTo"/>
        from detail_type
        <where>
            <include refid="SelectByParam"/>
        </where>
    </select>

    <select id="getLikeName" resultMap="detailTypeMap">
        select
        <include refid="SelectTo"/>
        from detail_type
        where Detail_type_name like CONCAT('%',#{detail_type.detailTypeName},'%')
    </select>

    <select id="getByName" resultMap="detailTypeMap">
        select
        <include refid="SelectTo"/>
        from detail_type
        <where>
            <include refid="SelectByParam"/>
        </where>
    </select>
    <select id="getByProductDetailId" resultMap="detailTypeMap">
        select
        <include refid="SelectTo"/>
        from detail_type
        where product_detail_id
        in
        <foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>
    <select id="getDetailTypeByProductId" resultMap="middle">
        select product_id,detail_type_id
        from product__detail_type
        where valid = 1 and product_id
        in
        <foreach collection="list" separator="," item="id" index="index" open="(" close=")">
            #{id}
        </foreach>
    </select>

    <select id="getByIds" resultMap="detailTypeMap">
        select
        <include refid="SelectTo"/>
        from detail_type
        where detail_type.id
        in
        <foreach collection="list" separator="," item="id" index="index" open="(" close=")">
            #{id}
        </foreach>
    </select>

</mapper>